@model NewsModel.Nota
@{
    var usuario = Session["user"] as MonitoreoModels.Usuario;
    if (usuario == null || usuario.Rol != "A")
    {
        Response.Redirect("~/News/Index");
    }    
    ViewBag.Title = "Index";
    if (usuario == null)
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    else if (usuario.Rol == "A")
    {
        Layout = "~/Views/Shared/_LayoutA.cshtml";
    }
    else{
        Layout = "~/Views/Shared/_LayoutE.cshtml";
    }
    ViewBag.Title = "Crear Nota";
}
<h2>Create</h2>
@using (Html.BeginForm("Create", "News", FormMethod.Post, new { enctype = "multipart/form-data" }))
{    
<div class="form-horizontal">
    <h4>Nota</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Reportero, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Reportero, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Reportero, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Seccion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.SeccionID, new SelectList(Model.Secciones, "Value", "Text"), "Seleccione una Seccion", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SeccionID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Género Periodístico", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CategoriaID, new SelectList(Model.Categorias, "Value", "Text"), "Seleccione un Género", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Categoria, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Ubicacion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Ubicacion, new[] { new SelectListItem { Text = "Local", Value = "Local" }, new SelectListItem { Text = "Nacional", Value = "Nacional" } }, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Ubicacion, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Relevancia, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Relevancia, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Relevancia, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Archivo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="file" required />
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Dimensiones, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Dimensiones, new { htmlAttributes = new { @class = "form-control", placeholder = "00x00" } })
            @Html.ValidationMessageFor(model => model.Dimensiones, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control", placeholder = "0.00" } })
            @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Privacidad, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.ValidationMessageFor(model => model.Privacidad, "", new { @class = "text-danger" })
            @Html.DropDownListFor(model => model.Privacidad, new[] { new SelectListItem { Text = "Si", Value = "Y" }, new SelectListItem { Text = "No", Value = "N" } }, htmlAttributes: new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DiarioImpreso, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.DiarioImpresoID, new SelectList(Model.Diarios, "Value", "Text"), "Seleccione un Diario", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DiarioImpresoID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Tag, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Tag, new { htmlAttributes = new { @class = "form-control", placeholder = "Escriba los tags separados por comas" } })
            @Html.ValidationMessageFor(model => model.Tag, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Añadir" class="btn btn-default" />
        </div>
    </div>
</div>
}
<div>
    @Html.ActionLink("Regresar a lista", "Index")
</div>
